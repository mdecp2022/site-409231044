var tipuesearch = {"pages": [{'title': 'About', 'text': '40923104 江宜珊 四設三甲 \n 倉儲連結: 409231044 \n 靜態網站: site-40923104 \n // \n 課程的公布欄: mde.tw \n 課程teams: cp2022 teams \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n <br/><br/><br/> \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'CP2022', 'text': ' Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n', 'tags': '', 'url': 'CP2022.html'}, {'title': 'W4', 'text': '學會用.replit同步個人倉儲,進入倉儲修改其內容,也可以直接推到遠端 \n 先進入.replit點選run \n \n 接著複製自己的倉儲連結網址,進入倉儲 \n \n 編輯完頁面後,按save,轉靜態 \n \n 接著再回到 .replit push自己的內容 \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '設定SSH和Key,還有倉儲改版的設定 \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W8~9', 'text': '期中考周 \n', 'tags': '', 'url': 'W8~9.html'}, {'title': 'W10', 'text': '因電腦的ipv6連線設定有問題 而導致隨堂考試沒辦法準時登入 \n 分小組 6個人一組 \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '因運動會 所以不上課 \n 乙班有用JSON檔統計上缺考的人 \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '因為準備比賽所以缺考考試 \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w5', 'text': '網頁連結 \n \n 在自己Brython的地方加上在自己Github Gist建立的程式碼 \n \n \n # 導入亂數模組\nimport random\n# 導入字串模組\nimport string\n# 利用 def 關鍵字定義函式\n# 函式的輸入變數可以設定初始值\ndef password_generator(size=4, chars=string.ascii_lowercase + string.digits):\n    # 函式內以多行註解說明函式功能\n    """Generate random password\n    """\n    # 利用 return 關鍵字將所產生的亂數字串傳回\n    return \'\'.join(random.choice(chars) for _ in range(size))\n# 建立一個變數與隨後的字串對應\npass_string = "abcdefghkmnpqrstuwxyz123456789"\n# 利用重複迴圈呼叫 password_generator() 函式 10 次\nfor i in range(10):\n    print(password_generator(4, pass_string)) \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '利用程式碼跑出修課的人員名單 \n 以下為實際操作的截圖及連結 \n 1a名單 \n \n from browser import document, html\n  \nbrython_div1 = document["brython_div1"]\n"""\nbrython_div1 <= html.BUTTON("hello")\nbrython_div1 <= html.BR()\nbrython_div1 <= html.A("google", href="https://google.com")\n"""\n  \nurl = "https://mde.tw/studlist/2022fall/1a.txt"\ndata = open(url).read().split("\\n")\nmdecp2022 = "https://mdecp2022.github.io/site-"\ndata = data[1:-1]\nfor i in data:\n    stud = i.split("\\t")\n    stud_num = stud[0]\n    github_acc = stud[1]\n    #print(stud_num, github_acc)\n    if github_acc == "":\n        github_acc = stud_num\n    site = mdecp2022 + github_acc\n    link = html.A(stud_num, href=site)\n    brython_div1 <= link\n    brython_div1 <= html.BR() \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'hw10-1', 'text': '下方是做出來的連結 \n 1a連結 \n \n \n', 'tags': '', 'url': 'hw10-1.html'}, {'title': 'hw10-2', 'text': '\n 有做出來的連結 \n 心得:我有自己試寫了程式便去試試看怎樣才能使結果變成可以直接 輸出 1, 3, 5, 7, 9 不會跳行,但還沒找出為甚麼跳行的原因,以下有實際操作的截圖 \n (自己修改的程式以及解釋) \n \n a = "" for i in range(1, 10, 2):\xa0 --------從1開始到小於10的數字,並每一次增量2  print(a + str(i) + ",")\xa0 ------------------數字顯示不跳行,並以逗號隔開 print(a) \n \n 1.這是一開始一直失敗的畫面 \n \n \n 2.後來稍微成功,但數字會同時顯示兩次 \n \n \n 3.後來成功一半的畫面,但是有換行的部分 \n \n \n ///////////// 老師上課內容 ////////////// \n \n \n a = ""\nfor i in range(1, 10, 1):\na + str(i) + ","\nprint(a)\n\n# 1, 3, 5, 7, 9\n如何修改上列程式, 可以輸出 1, 3, 5, 7, 9 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'hw10-2.html'}, {'title': 'w11', 'text': '\n w11 作業: \n \n 請問 w11 週小考有幾人缺考? \n 請問 w11 週小考平均分數多少? \n \n w10小考結果 \n 以下為 w10 缺考名單: 40823116 40823139 40823241 40923102 40923104 40923140 40923144 40923150 40923152 40923156 41123119 41123121 41123122 41123127 41123133 41123143 41123146 41123149 41123150 41123152 \n p.s. 那時候我在自己電腦上考試,但因為proxy有問題,而導致沒辦法於時間內進入考試網站完成考試因此缺考了 \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '', 'tags': '', 'url': 'w12.html'}, {'title': 'hw12-1', 'text': '\xa0 hw1 \xa0(有做出來的連結) \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\nuser_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\nprint(type(user_input_temp)) \n //// 在自己的倉儲中新增w12_hw1.py的New Gist\xa0///// \n \n', 'tags': '', 'url': 'hw12-1.html'}, {'title': 'hw1-1', 'text': '將超連結加入,使其需按下下方按鈕才能輸入值 \n  \n在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑\n \n \n \n  啟動 Brython  \n \n \n  以下事先在頁面中加入 id="brython_div" 的 div 標註\n之後可利用 Brython 的 document 模組與此 html 標註對應\n \n  利用 html 建立一個 id="btn1" 的按鈕  \n 取使用者輸入 \n \n \n \n \n \n', 'tags': '', 'url': 'hw1-1.html'}, {'title': 'hw12-2', 'text': 'hw2 \xa0 (有做出來的連結) \n # Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回\nuser_input_temp = input("請輸入攝氏溫度值:")\n# 接著列出 user_input_temp 變數的資料型別\nprint(type(user_input_temp))\n# 到這裡已知利用 input() 函式將傳回字串, 接著以 float() 將字串轉為浮點數\nuser_input_temp = float(user_input_temp)\n# 因為攝氏溫度乘上 9/5 之後再加上 32 就可以得到對應的華氏溫度值\nFahrenheit = (user_input_temp*9/5) + 32\n# 到這裡, Fahrenheit 資料型別為浮點數, 而 user_input_temp 在第 8 行也轉為浮點數\n# 要將兩個浮點數與字串相加, 都必須透過 str() 轉為字串\nprint("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.") \n //// 在自己的倉儲中新增w12_hw2.py的New Gist\xa0///// \n \n', 'tags': '', 'url': 'hw12-2.html'}, {'title': 'hw2-1', 'text': '將超連結加入,使其需按下下方按鈕才能輸入值 \n  \n在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑\n \n \n \n  啟動 Brython  \n \n \n  以下事先在頁面中加入 id="brython_div" 的 div 標註\n之後可利用 Brython 的 document 模組與此 html 標註對應\n \n  利用 html 建立一個 id="btn1" 的按鈕  \n 取使用者輸入 \n \n \n \n \n \n', 'tags': '', 'url': 'hw2-1.html'}, {'title': 'w13', 'text': '', 'tags': '', 'url': 'w13.html'}, {'title': 'hw13-1', 'text': '在這邊我們寫了一個程式,點開下方的連結後會發現跳出一個輸入溫度值的框框,接著輸入值後即可在下方看到輸入的值 \n \n 溫度1 \n \n 1.於輸入溫度值的框框內輸入數值 \n \n \n 2.接著就可以在下方看到輸出值的內容 \n \n \'\'\'\nf=c*9/5+32\nc=(f-32)*5/9\n\'\'\'\nc=input("請輸入攝氏溫度值")\nprint(c,type(c)) \n \n \n \n', 'tags': '', 'url': 'hw13-1.html'}, {'title': 'hw13-2', 'text': '基本上跟13-1差不多,但在這裡的程式是可以將我們輸入在溫度值框框的值轉換成華氏的溫度 \n \n 溫度2 \n \n 1.於輸入溫度值的框框內輸入數值 \n \n 2.接著就可以在下方看到輸出值將溫度轉換成華氏的 \n \n \n \n \'\'\'\nf = c*9/5 + 32\nc = (f-32)*5/9\n\'\'\'\nc = input("請輸入攝氏溫度值")\n#print(type(c))\nc = float(c)\nprint("請輸入攝氏溫度: " +str(c), "等於華氏溫度: " + str(c*9/5 +32)) \n \n', 'tags': '', 'url': 'hw13-2.html'}, {'title': 'w14', 'text': 'w14考試結果 \n # 導入 ast 模組是希望利用其 literal_eval() 將 dict 格式的字串轉為 dict 資料型別\n# 以利隨後的取值運算\nimport ast\n# 設計一個 quiz 類別, 其中有兩個成員變數與兩個成員函式\nclass quiz:\n    def __init__(self, cname, url):\n        self.cname = cname\n        self.url = url\n    # 定義一個函式, 以班級代號字串作為輸入, 可以傳回各班修課學員的學號數列\n    def get_stud(self):\n        # 將課程的班級代號字串作為 dict 的 key, 而 2022 fall 的課程代號作為對應值\n        # 使用者可以利用班級代號從 courses dict 取出課程代號\n        courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}\n        # 利用 c_name 從 courses 得到該學期的課程代號\n        c = courses[self.cname]\n        # 利用課程代號從學校教務主機取的該班修課人員名單\n        curl = "https://nfu.cycu.org/?semester=1111&courseno=" + c + "&column=True"\n        # 讀出各修課人員資料後, 以跳行符號切割, 得到的 data 為數列\n        data = open(curl).read().split("\\n")\n        # 因為最後一筆資料為空字串, 因此利用數列運算將其去除\n        stud = data[:-1]\n        # get_stud() 函式最後將對應班級的修課人員學號以數列格式傳回\n        return stud\n         \n    def get_score(self):\n        # 利用 open() 與 read() 讀取考試結果 JSON 檔案\n        json_data = open(self.url).read()\n        # 利用 ast.literal_eval() 將字串 dict, 轉為程式可用的 dict 資料型別\n        big_dict = ast.literal_eval(json_data)\n        # 從 big_dict 中, 取出 body 中的 testuser 欄位資料\n        data = big_dict["body"]["testuser"]\n        # 定義一個空 dict 資料變數, 隨後利用迴圈逐一將學號作為 key, 考試成績為 valude\n        # 組成 quiz_dict 的資料內容, 以便之後可以用學號當作輸入, 取得該員考試成績\n        quiz_dict = {}\n        for i in data:\n            # data 資料中的 user_name 為考試學員的帳號, 也就是學號\n            stud_id = data[i]["user_name"]\n            # data 資料中的 total_score 欄位為考試成績\n            # 因為考試成績為字串, 先轉為浮點數後, 再轉為整數\n            stud_score = int(float(data[i]["total_score"]))\n            # 逐一以學號為 key, 考試成績為對應 value, 將資料放入 quiz_dict\n            quiz_dict[stud_id] = stud_score\n        # 取得各學員的考試成績 quiz_dict 後, 將資料傳回\n        return quiz_dict\nurl = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a48d36ae883bde8efd07b25bfddaed8f13200353/2022_1209_cp_w14_1a_quiz.json"\ncpb_w14 = quiz("1a", url)\n# 利用 "1b" 作為輸入從 get_stud() 取出該班修課學員學號數列\ncp_stud = cpb_w14.get_stud()\ncp_score = cpb_w14.get_score()\nprint(cp_score) \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '回答以下問題: \n \n Q1:為何學習計算機程式需要建立個人倉儲? \n A1:透過個人倉儲可以看到每個人的版本跟每一次改版的內容記錄 ， 還有可以去學習並下載其他人對於程式的破解檔 。 \n \n Q2: 全球資訊網能夠提供甚麼功能或有什麼優點? \n A2:是資訊時代發展的核心， 主要是文字檔案格式化和超文件（HTML），還可能包含圖片、影片、聲音和軟體元件，使其呈現為多媒體內容的連貫頁面。 \n \n Q3: Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A3:Replit是可以直接連結到自己的倉儲，並修改 \n \n Q4: https, ssh 到底提供使用者那些功能或優點? \n A4:可以快速地將訊息推送到遠端 \n \n Q5: Brython 與 Python 有甚麼差別? \n A5:\xa0Python是程式語言 \n \n Q6: 能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n A6:你會寫程式了，也看得懂程式碼在寫甚麼 \n \n Q7: 變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '\n 綠色方塊行走模擬 \n \n \n //成功了喔// \n \n 綠色方塊行走加開始按鈕 \n \n 心得:有不斷去試,但因為每改一個地方讓程式去執行的時候,就會發現後面一直顯示錯誤,所以需要一點耐心去研究程式碼的部分 \n \n \n \n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'w17', 'text': '上台報告自己倉儲 \n 從1到10的奇數相加結果 \n \n sum = 1+3+5+7+9\nprint(sum) \n \n 下面是修改程式 使程式從1加到100 每次都加奇數的結果 \n 結果連結 \n \n # sum 初始值設為 0\nsum = 0\ninit = 1\nupto = 100\n# 利用 for 重複迴圈與變數加法進行累加\nfor i in range(init, upto+1,+2):\n    sum = sum + i\nprint("從" + str(init) + "累加到" + str(upto) + "=" + str(sum)) \n \n \n 畫出直線 \n \n \n \n \n', 'tags': '', 'url': 'w17.html'}]};